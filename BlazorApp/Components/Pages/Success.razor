@page "/success"
@using System.ComponentModel.DataAnnotations
@using BlazorApp.Models
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ILogger<InicioSesion> Logger
@rendermode InteractiveServer


<h3>Inicio de Sesión</h3>

<h2>Sesión iniciada correctamente</h2>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Nombre de usuario:</label>
        <InputText id="username" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>
    <div>
        <label for="password">Contraseña:</label>
        <InputText id="password" @bind-Value="loginModel.Password" type="password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
    <button type="submit">Iniciar Sesión</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private string message = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            Logger.LogInformation($"Attempting login with Username: {loginModel.Username}, Password: {loginModel.Password}");
            var client = HttpClientFactory.CreateClient("ServerAPI");
            var response = await client.PostAsJsonAsync("api/User/Login", loginModel);


            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResult>();
                if (result.Success)
                {
                    NavigationManager.NavigateTo("/");
                    return;
                }
                message = "Credenciales inválidas";
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                message = $"Error al iniciar sesión: {response.StatusCode} - {errorContent}";
                Logger.LogError("Login failed: {StatusCode} - {ErrorContent}", response.StatusCode, errorContent);
            }
        }
        catch (Exception ex)
        {
            message = $"Excepción al iniciar sesión: {ex.Message}";
            Logger.LogError(ex, "Exception occurred during login");
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "El nombre de usuario es requerido")]
        public string Username { get; set; }

        [Required(ErrorMessage = "La contraseña es requerida")]
        public string Password { get; set; }
    }

    public class LoginResult
    {
        public bool Success { get; set; }
    }
}